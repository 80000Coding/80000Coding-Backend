name: Continuous Deployment

on:
  push:
    branches: ["dev", "feat/65"]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - error
      environment:
        description: "Environment"
        required: false
        type: environment

permissions:
  contents: read

jobs:
  docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: set version from on push tags
        run: |
          TAG=${{ github.event.ref }}
          VERSION=${TAG#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: build docker
        run: ./gradlew bootBuildImage --imageName=$REPO

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish Docker Image
        run: |
          docker push $REPO
          docker tag $REPO $REPO:${{ env.VERSION }}
          docker push $REPO:${{ env.VERSION }}

      - name: Get Github Actions IP # 실행 중인 가상 환경 IP 확인
        id: ip
        uses: haythem/public-ip@v1.2 # steps.ip.outputs.ipv4 로 사용 가능

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # <----- ACCESS_KEY
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }} # <----- SECRET_ACCESS
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security group # <----- secrets.AWS_SG_ID
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32 

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_SSH_HOST }} # <----- ip 주소
          username: ${{ secrets.AWS_SSH_USERNAME }} # <----- ec2 접속 계정
          password: ${{ secrets.AWS_SSH_PASSWORD }} # <----- ec2 접속 비밀번호
          port: ${{ secrets.AWS_SSH_PORT }} # <----- ec2 접속 포트
          script: |
            ./run_80000coding_backend.sh

      - name: Remove Github Actions IP From Security Group
        run: |
            aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32